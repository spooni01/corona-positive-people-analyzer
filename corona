#!/usr/bin/env bash

###############################################
#                                             #
# Name:     Corona - positive people analyzer #
# Author:   Adam Ližičiar, xlizic00           #
#                                             #
###############################################

#colors
RED="\033[0;31m"
NOCOLOR="\033[0m"

################################################
################# FUNCTIONS ####################
################################################

# Write help text to the terminal.
help()
{
    printf "${RED}"
    echo "--------------------------------------------------"
    echo "|                                                |"
    echo "|       CORONA - POSITIVE USER ANALYZER          |"
    echo "|                                                |"
    echo "--------------------------------------------------"
    printf "${NOCOLOR}"
    echo "FORMAT:"
    echo "corona [-h] [FILTERS] [COMMAND] [LOG [LOG2 [...]]"
    echo "--------------------------------------------------"
    echo "MAIN:"
    echo "-h -> vypise pomocnik"
    echo "--------------------------------------------------"
    echo "FILTERS:"
    echo "-a DATETIME -> vypis zaznamov iba pod danom datume"
    echo "-b DATETIME -> vypis zaznamov iba pred danym datumom"
    echo "-g GENDER -> filter podla pohlavia (M = muzi, Z = zeny)"
    echo "-s [WIDTH] -> vypis dat graficky"
    echo "--------------------------------------------------"
    echo "COMMAND:"
    echo "infected -> spocita pocet nakazenych"
    echo "merge -> spoji subory so zaznamami do jedneho"
    echo "gender -> pocet nakazenych pre jednotlive pohlavia"
    echo "age -> statistika nakazenych podla veku"
    echo "daily -> statistika nakazenych pre jednotlive dni"
    echo "monthly -> statistika nakazenych pre jednotlive mesiace"
    echo "yearly -> statistika nakazenych pre jednotlive roky"
    echo "countries -> stastika nakazenych pre krajiny nakazy"
    echo "districts -> stastika nakazenych pre okresy"   
    echo "regions -> stastika nakazenych pre kraje"
    printf "${RED}"
    echo "--------------------------------------------------"
    printf "${NOCOLOR}"
}

# Print number of persons in table by filter. If input is get_num "x",
# return value is total number of all infected people. 
get_num()
{
    declare -i num=0
    declare -i actual_line=0    # This counter is for skipping first line
 
    while IFS=, read -r id datum vek pohlavi kraj_nuts_kod okres_lau_kod nakaza_v_zahranici nakaza_zeme_csu_kod reportovano_khs
        do
            actual_line=$((actual_line + 1))
            
            if [ "$actual_line" != "1" ]
            then
                if [ "$1" == "-a" ] # data after date
                then
                    if [[ "$datum" > "$2" ]]
                    then
                        num=$((num + 1))
                    fi

                elif [ "$1" == "-b" ] # date before
                then
                    if [[ "$datum" < "$2" ]]
                    then
                        num=$((num + 1))
                    fi    
                
                elif [ "$1" == "-g" ] # gender
                then
                    if [ "$pohlavi" == "$2" ]
                    then
                        num=$((num + 1))
                    fi 
                else
                    num=$((num + 1))   
                fi  

              
            fi
        done < osoby.csv

    echo "$num"   
}

# Print number for each gender. If input is get_gender "x",
# return value is total number of all infected people sorted
# by gender. 
get_gender()
{
    declare -i num_of_men=0
    declare -i num_of_women=0
    declare -i actual_line=0    # This counter is for skipping first line
 
    while IFS=, read -r id datum vek pohlavi kraj_nuts_kod okres_lau_kod nakaza_v_zahranici nakaza_zeme_csu_kod reportovano_khs
        do
            actual_line=$((actual_line + 1))
            
            if [ "$actual_line" != "1" ]
            then
                if [ "$1" == "-a" ] # data after date
                then
                    if [[ "$datum" > "$2" ]]
                    then
                        if [ "$pohlavi" == "M" ] # add 1 to the correct gender
                        then
                            num_of_men=$((num_of_men + 1))
                        else
                            num_of_women=$((num_of_women + 1))
                        fi        
                    fi

                elif [ "$1" == "-b" ] # date before
                then
                    if [[ "$datum" < "$2" ]]
                    then
                        if [ "$pohlavi" == "M" ] # add 1 to the correct gender
                        then
                            num_of_men=$((num_of_men + 1))
                        else
                            num_of_women=$((num_of_women + 1))
                        fi  
                    fi    
                
                elif [ "$1" == "-g" ] # gender
                then
                    if [ "$pohlavi" == "$2" ]
                    then
                        if [ "$pohlavi" == "M" ] # add 1 to the correct gender
                        then
                            num_of_men=$((num_of_men + 1))
                        else
                            num_of_women=$((num_of_women + 1))
                        fi  
                    fi 
                else
                    if [ "$pohlavi" == "M" ] # add 1 to the correct gender
                    then
                        num_of_men=$((num_of_men + 1))
                    else
                        num_of_women=$((num_of_women + 1))
                    fi    
                fi  

              
            fi
        done < osoby.csv

    echo "M: $num_of_men" 
    echo "Z: $num_of_women"   
}

# Print number of persons sorted by their age. If input is get_gender "x",
# return value is total number of all infected people sorted by age. 
get_age()
{
    ages=( 0 0 0 0 0 0 0 0 0 0 0 0 ) 

    declare -i actual_line=0    # This counter is for skipping first line
 
    while IFS=, read -r id datum vek pohlavi kraj_nuts_kod okres_lau_kod nakaza_v_zahranici nakaza_zeme_csu_kod reportovano_khs
        do
            actual_line=$((actual_line + 1))
            
            if [ "$actual_line" != "1" ]
            then
                if [ "$1" == "-a" ] # data after date
                then
                    if [[ "$datum" > "$2" ]]
                    then
                        if [ "$vek" -lt "6" ]
                        then
                            (( ages[0]++ ))
                        elif [ "$vek" -lt  "16" ]
                        then
                            (( ages[1]++ ))
                        elif [ "$vek" -lt  "26" ]
                        then
                            (( ages[2]++ ))
                        elif [ "$vek" -lt  "36" ]
                        then
                            (( ages[3]++ ))
                        elif [ "$vek" -lt  "46" ]
                        then
                            (( ages[4]++ ))
                        elif [ "$vek" -lt  "56" ]
                        then
                            (( ages[5]++ ))
                        elif [ "$vek" -lt  "66" ]
                        then
                            (( ages[6]++ ))
                        elif [ "$vek" -lt  "76" ]
                        then
                            (( ages[7]++ ))
                        elif [ "$vek" -lt  "86" ]
                        then
                            (( ages[8]++ ))
                        elif [ "$vek" -lt  "96" ]
                        then
                            (( ages[9]++ ))
                        elif [ "$vek" -lt  "106" ]
                        then
                            (( ages[10]++ ))
                        else
                            (( ages[11]++ ))
                        fi 
                    fi

                elif [ "$1" == "-b" ] # date before
                then
                    if [[ "$datum" < "$2" ]]
                    then
                        if [ "$vek" -lt "6" ]
                        then
                            (( ages[0]++ ))
                        elif [ "$vek" -lt  "16" ]
                        then
                            (( ages[1]++ ))
                        elif [ "$vek" -lt  "26" ]
                        then
                            (( ages[2]++ ))
                        elif [ "$vek" -lt  "36" ]
                        then
                            (( ages[3]++ ))
                        elif [ "$vek" -lt  "46" ]
                        then
                            (( ages[4]++ ))
                        elif [ "$vek" -lt  "56" ]
                        then
                            (( ages[5]++ ))
                        elif [ "$vek" -lt  "66" ]
                        then
                            (( ages[6]++ ))
                        elif [ "$vek" -lt  "76" ]
                        then
                            (( ages[7]++ ))
                        elif [ "$vek" -lt  "86" ]
                        then
                            (( ages[8]++ ))
                        elif [ "$vek" -lt  "96" ]
                        then
                            (( ages[9]++ ))
                        elif [ "$vek" -lt  "106" ]
                        then
                            (( ages[10]++ ))
                        else
                            (( ages[11]++ ))
                        fi 
                    fi    
                
                elif [ "$1" == "-g" ] # gender
                then
                    if [ "$pohlavi" == "$2" ]
                    then
                        if [ "$vek" -lt "6" ]
                        then
                            (( ages[0]++ ))
                        elif [ "$vek" -lt  "16" ]
                        then
                            (( ages[1]++ ))
                        elif [ "$vek" -lt  "26" ]
                        then
                            (( ages[2]++ ))
                        elif [ "$vek" -lt  "36" ]
                        then
                            (( ages[3]++ ))
                        elif [ "$vek" -lt  "46" ]
                        then
                            (( ages[4]++ ))
                        elif [ "$vek" -lt  "56" ]
                        then
                            (( ages[5]++ ))
                        elif [ "$vek" -lt  "66" ]
                        then
                            (( ages[6]++ ))
                        elif [ "$vek" -lt  "76" ]
                        then
                            (( ages[7]++ ))
                        elif [ "$vek" -lt  "86" ]
                        then
                            (( ages[8]++ ))
                        elif [ "$vek" -lt  "96" ]
                        then
                            (( ages[9]++ ))
                        elif [ "$vek" -lt  "106" ]
                        then
                            (( ages[10]++ ))
                        else
                            (( ages[11]++ ))
                        fi 
                    fi 
                else
                    if [ "$vek" -lt "6" ]
                    then
                        (( ages[0]++ ))
                    elif [ "$vek" -lt  "16" ]
                    then
                        (( ages[1]++ ))
                    elif [ "$vek" -lt  "26" ]
                    then
                        (( ages[2]++ ))
                    elif [ "$vek" -lt  "36" ]
                    then
                        (( ages[3]++ ))
                    elif [ "$vek" -lt  "46" ]
                    then
                        (( ages[4]++ ))
                    elif [ "$vek" -lt  "56" ]
                    then
                        (( ages[5]++ ))
                    elif [ "$vek" -lt  "66" ]
                    then
                        (( ages[6]++ ))
                    elif [ "$vek" -lt  "76" ]
                    then
                        (( ages[7]++ ))
                    elif [ "$vek" -lt  "86" ]
                    then
                        (( ages[8]++ ))
                    elif [ "$vek" -lt  "96" ]
                    then
                        (( ages[9]++ ))
                    elif [ "$vek" -lt  "106" ]
                    then
                        (( ages[10]++ ))
                    else
                        (( ages[11]++ ))
                    fi   
                fi  

              
            fi
        done < osoby.csv

 
    printf  "0-5:\t ${ages[0]}\n" 
    printf  "6-15:\t ${ages[1]}\n"
    printf  "16-25:\t ${ages[2]}\n"
    printf  "26-35:\t ${ages[3]}\n"
    printf  "36-45:\t ${ages[4]}\n"
    printf  "46-55:\t ${ages[5]}\n"
    printf  "56-65:\t ${ages[6]}\n"
    printf  "66-75:\t ${ages[7]}\n"
    printf  "76-85:\t ${ages[8]}\n"
    printf  "86-95:\t ${ages[9]}\n"
    printf  "96-105:\t ${ages[10]}\n"
    printf  ">105:\t ${ages[11]}\n"
}

# Print number of persons in table by day filter. If input is get_num "x",
# return value is total number of all infected people. 
get_daily()
{
    declare -i num=0
    declare -i actual_line=0    # This counter is for skipping first line
    date=""

    while IFS=, read -r id datum vek pohlavi kraj_nuts_kod okres_lau_kod nakaza_v_zahranici nakaza_zeme_csu_kod reportovano_khs
        do
            actual_line=$((actual_line + 1))
            
            if [ "$actual_line" != "1" ]
            then
                if [ "$1" == "-a" ] # data after date
                then
                    if [[ "$datum" > "$2" ]]
                    then
                        if [ "$date" == "" ]
                        then
                            date=$(date +$datum)
                        fi

                        if [ "$date" == "$datum" ]
                        then
                            num=$((num + 1))
                        else
                            echo "$date: $num"
                            num=$((1))
                            date=$(date +$datum)
                        fi
                    fi

                elif [ "$1" == "-b" ] # date before
                then
                    if [[ "$datum" < "$2" ]]
                    then
                        if [ "$date" == "" ]
                        then
                            date=$(date +$datum)
                        fi

                        if [ "$date" == "$datum" ]
                        then
                            num=$((num + 1))
                        else
                            echo "$date: $num"
                            num=$((1))
                            date=$(date +$datum)
                        fi
                    fi    
                
                elif [ "$1" == "-g" ] # gender
                then
                    if [ "$pohlavi" == "$2" ]
                    then
                        if [ "$date" == "" ]
                        then
                            date=$(date +$datum)
                        fi

                        if [ "$date" == "$datum" ]
                        then
                            num=$((num + 1))
                        else
                            echo "$date: $num"
                            num=$((1))
                            date=$(date +$datum)
                        fi
                    fi 
                else
                    if [ "$date" == "" ]
                    then
                        date=$(date +$datum)
                    fi

                    if [ "$date" == "$datum" ]
                    then
                        num=$((num + 1))
                    else
                        echo "$date: $num"
                        num=$((1))
                        date=$(date +$datum)
                    fi 
                fi  

              
            fi
        done < osoby.csv
}

# Print number of persons in table by monthly filter. If input is get_num "x",
# return value is total number of all infected people. 
get_monthly()
{
    declare -i num=1 #start at 1 because first one is skiped
    declare -i actual_line=0    # This counter is for skipping first line
    date=""

    while IFS=, read -r id datum vek pohlavi kraj_nuts_kod okres_lau_kod nakaza_v_zahranici nakaza_zeme_csu_kod reportovano_khs
        do
            actual_line=$((actual_line + 1))
            
            if [ "$actual_line" != "1" ]
            then
                if [ "$1" == "-a" ] # data after date
                then
                    if [[ "$datum" > "$2" ]]
                    then
                        if [ "$date" == "" ]
                        then
                            date=$(date +$datum)
                            date=${date::-3} #delete last 3 chars
                        else
                            datum=${datum::-3} #format $datum

                            if [ "$date" == "$datum" ]
                            then
                                num=$((num + 1))
                            else
                                echo "$date: $num"
                                num=$((1))

                                date=$(date +$datum)
                            fi 
                        fi
                    fi

                elif [ "$1" == "-b" ] # date before
                then
                    if [[ "$datum" < "$2" ]]
                    then
                        if [ "$date" == "" ]
                        then
                            date=$(date +$datum)
                            date=${date::-3} #delete last 3 chars
                        else
                            datum=${datum::-3} #format $datum

                            if [ "$date" == "$datum" ]
                            then
                                num=$((num + 1))
                            else
                                echo "$date: $num"
                                num=$((1))

                                date=$(date +$datum)
                            fi 
                        fi
                    fi    
                
                elif [ "$1" == "-g" ] # gender
                then
                    if [ "$pohlavi" == "$2" ]
                    then
                        if [ "$date" == "" ]
                        then
                            date=$(date +$datum)
                            date=${date::-3} #delete last 3 chars
                        else
                            datum=${datum::-3} #format $datum

                            if [ "$date" == "$datum" ]
                            then
                                num=$((num + 1))
                            else
                                echo "$date: $num"
                                num=$((1))

                                date=$(date +$datum)
                            fi 
                        fi
                    fi 
                else       
                    if [ "$date" == "" ]
                    then
                        date=$(date +$datum)
                        date=${date::-3} #delete last 3 chars
                    else
                        datum=${datum::-3} #format $datum

                        if [ "$date" == "$datum" ]
                        then
                            num=$((num + 1))
                        else
                            echo "$date: $num"
                            num=$((1))

                            date=$(date +$datum)
                        fi 
                    fi
                fi             
            fi
    done < osoby.csv

    echo "$date: $num"
}

# Print number of persons in table by yearly filter. If input is get_num "x",
# return value is total number of all infected people. 
get_yearly()
{
    declare -i num=1 #start at 1 because first one is skiped
    declare -i actual_line=0    # This counter is for skipping first line
    date=""

    while IFS=, read -r id datum vek pohlavi kraj_nuts_kod okres_lau_kod nakaza_v_zahranici nakaza_zeme_csu_kod reportovano_khs
        do
            actual_line=$((actual_line + 1))
            
            if [ "$actual_line" != "1" ]
            then
                if [ "$1" == "-a" ] # data after date
                then
                    if [[ "$datum" > "$2" ]]
                    then
                        if [ "$date" == "" ]
                        then
                            date=$(date +$datum)
                            date=${date::-6} #delete last 3 chars
                        else
                            datum=${datum::-6} #format $datum

                            if [ "$date" == "$datum" ]
                            then
                                num=$((num + 1))
                            else
                                echo "$date: $num"
                                num=$((1))

                                date=$(date +$datum)
                            fi 
                        fi
                    fi

                elif [ "$1" == "-b" ] # date before
                then
                    if [[ "$datum" < "$2" ]]
                    then
                        if [ "$date" == "" ]
                        then
                            date=$(date +$datum)
                            date=${date::-6} #delete last 3 chars
                        else
                            datum=${datum::-6} #format $datum

                            if [ "$date" == "$datum" ]
                            then
                                num=$((num + 1))
                            else
                                echo "$date: $num"
                                num=$((1))

                                date=$(date +$datum)
                            fi 
                        fi
                    fi    
                
                elif [ "$1" == "-g" ] # gender
                then
                    if [ "$pohlavi" == "$2" ]
                    then
                        if [ "$date" == "" ]
                        then
                            date=$(date +$datum)
                            date=${date::-6} #delete last 3 chars
                        else
                            datum=${datum::-6} #format $datum

                            if [ "$date" == "$datum" ]
                            then
                                num=$((num + 1))
                            else
                                echo "$date: $num"
                                num=$((1))

                                date=$(date +$datum)
                            fi 
                        fi
                    fi 
                else       
                    if [ "$date" == "" ]
                    then
                        date=$(date +$datum)
                        date=${date::-6} #delete last 3 chars
                    else
                        datum=${datum::-6} #format $datum

                        if [ "$date" == "$datum" ]
                        then
                            num=$((num + 1))
                        else
                            echo "$date: $num"
                            num=$((1))

                            date=$(date +$datum)
                        fi 
                    fi
                fi             
            fi
    done < osoby.csv

    echo "$date: $num"
}

################################################
################### MAIN #######################
################################################

export POSIXLY_CORRECT=yes

# Help (in this case just print help text and end program)
if  [ "$1" = "-h" ] 
then
    help

# Write infected people
elif [ "$1" = "infected" ] || [ "$3" == "infected" ]
then 
    if [ "$1" != "" ] && [ "$2" != "" ] && [ "$3" = "infected" ] # Filter is set
    then
        get_num "$1" "$2"   
    else
        get_num "x"
    fi    

# Write gender of infected people 
elif [ "$1" = "gender" ] || [ "$3" == "gender" ]
then 
    if [ "$1" != "" ] && [ "$2" != "" ] && [ "$3" = "gender" ] # Filter is set
    then
        get_gender "$1" "$2"   
    else
        get_gender "x"
    fi   

# Write age of infected people 
elif [ "$1" = "age" ] || [ "$3" == "age" ]
then 
    if [ "$1" != "" ] && [ "$2" != "" ] && [ "$3" = "age" ] # Filter is set
    then
        get_age "$1" "$2"   
    else
        get_age "x"
    fi

# Write infected people sorted by days
elif [ "$1" = "daily" ] || [ "$3" == "daily" ]
then 
    if [ "$1" != "" ] && [ "$2" != "" ] && [ "$3" = "daily" ] # Filter is set
    then
        get_daily "$1" "$2"   
    else
        get_daily "x"
    fi

# Write infected people sorted by months
elif [ "$1" = "monthly" ] || [ "$3" == "monthly" ]
then 
    if [ "$1" != "" ] && [ "$2" != "" ] && [ "$3" = "monthly" ] # Filter is set
    then
        get_monthly "$1" "$2"   
    else
        get_monthly "x"
    fi

# Write infected people sorted by years
elif [ "$1" = "yearly" ] || [ "$3" == "yearly" ]
then 
    if [ "$1" != "" ] && [ "$2" != "" ] && [ "$3" = "yearly" ] # Filter is set
    then
        get_yearly "$1" "$2"   
    else
        get_yearly "x"
    fi

# No command
else
    printf "Bol zadany nespravny tvar prikazu, pre napovedu napis ${RED}corona -h${NOCOLOR}\n"
fi

exit 0